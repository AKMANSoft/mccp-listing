generator client {
  provider = "prisma-client-js"
}

// generator erd {
//   provider = "prisma-erd-generator"
// }

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model HousingProfile {
  id                     Int                 @id @default(autoincrement())
  bedroomLocation        String              @db.Text
  beds                   String              @db.Text
  nursingSupport         String              @db.Text
  overnightSupervision   String              @db.Text
  phone                  String              @db.Text
  physicalAccommodations String              @db.MediumText
  housingType            String              @db.Text
  fundingType            String              @db.Text
  // intellectualDisability String?  @db.Text
  staffingPattern        String              @db.Text
  challengingBehaviours  String              @db.Text
  providerId             Int                 @db.Int
  provider               String              @db.Text
  state                  String              @db.Text
  address                String              @db.LongText
  city                   String              @db.Text
  createdAt              DateTime            @default(now())
  updatedAt              DateTime            @default(now()) @updatedAt
  submissions            ListingSubmission[]
}

model ListingSubmission {
  id                  String             @id @default(uuid())
  waiverType          String             @db.Text
  waiverTypeSpecific  String             @db.Text
  timeframe           String             @db.Text
  housingType         String             @db.MediumText
  fullName            String             @db.Text
  dateOfBirth         DateTime
  pmiNumber           String             @db.Text
  phone               String?            @db.Text
  email               String?            @db.Text
  relegiousPref       String?            @db.MediumText
  gender              String?            @db.Text
  race                String?            @db.Text
  equipementsNeeded   String             @db.MediumText
  guardianStatus      String             @db.Text
  livingSituation     String             @db.Text
  mobility            Mobility?
  teamContact         TeamContact?
  address             Address?
  residentialOpenings ResidntialOpening?
  housingProfile      HousingProfile     @relation(fields: [housingProfileId], references: [id])
  housingProfileId    Int
}

model ResidntialOpening {
  id                         String            @id @default(uuid())
  accessible55P              String?
  notAccessible55P           String?
  accessible18P              String?
  notAccessible18P           String?
  notAccessible18PFemaleOnly String?
  submissionId               String            @unique
  submission                 ListingSubmission @relation(fields: [submissionId], references: [id])
}

model Address {
  id           String            @id @default(uuid())
  fullAddress  String            @db.LongText
  city         String?           @db.Text
  postalCode   String?           @db.Text
  state        String?           @db.Text
  submissionId String            @unique
  submission   ListingSubmission @relation(fields: [submissionId], references: [id])
}

model Mobility {
  id                  String            @id @default(uuid())
  mobilityConcers     String
  usedMobilityDevices String?           @db.Text
  adjustWithOneFloor  String?
  submissionId        String            @unique
  submission          ListingSubmission @relation(fields: [submissionId], references: [id])
}

model TeamContact {
  id                  String            @id @default(uuid())
  caseManager         String            @db.MediumText
  referrer            String?           @db.MediumText
  legalRepresentative String?           @db.MediumText
  assessmentData      String?
  signature           String?
  submissionId        String            @unique
  submission          ListingSubmission @relation(fields: [submissionId], references: [id])
  assessmentFiles     AssessmentFile[]
}

model AssessmentFile {
  id        String      @id @default(uuid())
  publicUrl String
  localUrl  String
  contactId String
  contact   TeamContact @relation(fields: [contactId], references: [id])
}
